***********
***TO DO***
***********
Need to add more seed data to be able to test if these things work
Finish User landing page for after login
    Shows "active" Invitations
    Shows "pending" Invitations
    Shows "pending" friend requests


Need to test new SQLAlchemy relationships to make sure they're doing what I
    think they're doing:
    (HOW: python -i model.py. u# = User.query.get(user #), then play from there)
    all_relationships
    usr (backref on relationships, should show users data for user_id)
    friend (backref on relationships, should show users data for friend_id)
Design queries that will be used by app (don't forget to use SQLAlchemy relationships)
    Select invitations that are dated in the future
    Select past invitations (last 5 days, last 30 days)
    Select pending friend requests
    Select list of Active friends
    Select list of Inactive friends
    Select list of Rejected friend requests
    Test those queries

Import requests - gets error, so I am getting Google Maps data manually

Improve Waypoints and Invitations table/class
    store lat/long data in one field instead of two (see postgreSQL datatypes)

Make Manage Friends routes & pages
Scenario that should be tested:  what if two people ask each other (two pendings)
    1) Form to ask somebody (by email address) to be your friend
        If email exists:
            If previously rejected by this person, do not allow request to continue
            Else:
                create record in relationships (user1 as user_id, user2 as friend_id,
                status as 'pending')
        Else: at this time, say "does not exist"
            later: offer form to email your friend link to join Rendezvous
    2) Page to see your "pending" friend requests & respond to them
        user1 asks user2:
            if rejected, mark status as "rejected"
            if accepted, mark status as "active" and create a second row with user2 as user_id, user1 as friend_id, status as 'active')
                This is slightly non-normalied, but WAY easier to query things!
    3)Make app_route & page for managing existing "active" relationships
        mark both users as "inactive" if either user revokes friendship
    4)Make app_route & page for managing "inactive" relationships
        allow user to re-initiate relationship (sends new friend request?)
    5)Make app_route for managing requests you have rejected
        allow user to remove the rejected record so that person can successfully
        request friendship again

Make Invitation route & form for creating new invitation
    Google Maps autofill to choose destination
    (later - Or select from a map?)
    Checkboxes to choose Friends to invite
    Date/time of Rendezvous
    (don't forget to user session['login'] as created_by_id)
Add tests

Get better route data for user1 and user2 and put it in seed.py
Allow two users to see the same map when logged in at same time
    Color code "my" route vs "other" route
    Maybe add a tag to the animation with their name all tiny
Send alert to "other" user when one user arrives at destination
Add tests!
Display ETA of "other" user

Add more tests
Run those tests
Improve Login
    add some javascript to check for valid data w/out reloading page
    How about some login security?!
        
        Do some encryption or something of password?
            No idea... what if i grab Bootstrap logins, will all this
            be done for me?
          place to start research?:
            for the password hash for user login i used import hashlib salt = 'something' hash = hashlib.md5(salt + pword).hexdigest()
Add tests
Add marker on destination point
Add link on map to get back to Rendezvous pages?
How can I supress the link to Homepage from the homepage, but have it everywhere else?
Change color of User1/User2's routes
If traffic alert rec'd by one user, display that to other user
Modify everything to make it work when n-users on an invitation (for loops!)
    map display each route animation in different color/tag with name
    map display "my" route in distinct color
Forgot User Name & Forgot Password stuff
Make Invitation management route & page
    Accept or Decline invitation(s)
    Modify invitation (by user who created it)
    Propose alternatives (by invited users)
    Includes "Go" button which (idealy):
        opens Google Maps w/destination from Invitation populated
        prompts you with suggested routes
        lets you choose a route
        makes your chosen route information available to other user(2) on invitation
    Includes a "Stop" button which turns off route sharing
Expire Invitations when all users have arrived at destination

Make sure restrictions are set on Google API key so it only works from my URL
Obtain geolocation info and update animation of routes & status info in real time
Email Invitation announcement to invited users
Email reminders of Rendezvous at set intervals
    Make Settings route & page for user to manage settings
        email notification of Invitation
        reminder frequency
Handle timezone differences between users
Friends management:  if someone un-friends, are they allowed to re-request?


Way Future Features:
    For Rendezvous happening in x-minutes, when setting up invitation show other mutual friends that are nearby to prompt you to invite them (given permission from users to "share location for invites") ?? Can this even be done?? query geolocation of someone not logged in? probably not?
    Be able to put in date/time of rendezvous and your departure location & method of travel and friend's likely departure location & method of travel & have it suggest places that are halfway between you not as the crow flies, but by how long it's going to take each of you to arrive.


***********
***DONE***
***********

Added link on Base to get to your user profile page if you are logged in
Created user profile landing page, but realized I had to add status to invites
    as well as add more seed data to be able to test what is displayed
Realized belatedly that UsersInvites needs to have status so friends can accept
    or reject your invitation.
active_relationships SQL Alchemy relationship works as desired
Do not display password when typing (thank you, Aaron)
^5/12^

Added SQLAlchemy relationships:  all_relationships and active_relationships to model.py
Added relationship test data to seed.py
Created relationships table
Created relationship_status (pending, rejected, active, inactive)
Added created_by_id and created_date to invitations
Tested Registration (allow only unique emails)
    Ran into "duplicate key value violates unique contraint" when manually adding users after seeding database,
        Fixed:  modifed seed.py to update seq_id for all tables with serialized keys
Tested Login
Created tests.py, made some tests of current routes
^5/11^

Modified model.py and seed.py to add email address of users
Make registration route & page
Make login process route
Make Login route and page
Modified animation so route1 and route2 go at different speeds
Modified animation so route1 and route2 start at different times
Animate second route
Display user2's route on the map
^5/10^

Animate traveling along the route
Display user1's route on the map
Make web page that displays a map
Build seed.py
Start server.py
Build model.py
